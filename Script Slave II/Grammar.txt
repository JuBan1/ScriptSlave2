file_body:		global_def*

global_decl:	glob_var_def
global_decl:	func_def
global_decl:	struct_def

class_def:		'class' ident '{' class_body '}'
class_body:		class_var*

class_var:		type ident (= expr)? ;

glob_var_def:	type ident ;
func_def:		type ident '(' param_list ')' { stmt_list }

param_list:		param (, param)*
param_list:		e
param:			type ident	

arg_list:		expr (, expr)*
arg_list:		e	

stmt_list:		stmt*

stmt:			while ( expr ) stmt
stmt:			if '(' expr ')' stmt else stmt
stmt:			if '(' expr ')' stmt

stmt:			ident = expr ;
stmt:			ident '(' arg_list ')' ;
stmt:			break ;
stmt:			return ;
stmt:			return expr ;
stmt:			type ident (= expr)? ;

stmt:			{ stmt_block }

stmt_block:		stmt*

named_expr:		..
expr:			..